/*
ai-proto

ai proto for coder

API version: 0.0.3
Contact: panleiming@linksaas.pro
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ErrInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrInfo{}

// ErrInfo struct for ErrInfo
type ErrInfo struct {
	// 错误信息
	ErrMsg *string `json:"errMsg,omitempty" xml:"errMsg"`
}

// NewErrInfo instantiates a new ErrInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrInfo() *ErrInfo {
	this := ErrInfo{}
	return &this
}

// NewErrInfoWithDefaults instantiates a new ErrInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrInfoWithDefaults() *ErrInfo {
	this := ErrInfo{}
	return &this
}

// GetErrMsg returns the ErrMsg field value if set, zero value otherwise.
func (o *ErrInfo) GetErrMsg() string {
	if o == nil || IsNil(o.ErrMsg) {
		var ret string
		return ret
	}
	return *o.ErrMsg
}

// GetErrMsgOk returns a tuple with the ErrMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrInfo) GetErrMsgOk() (*string, bool) {
	if o == nil || IsNil(o.ErrMsg) {
		return nil, false
	}
	return o.ErrMsg, true
}

// HasErrMsg returns a boolean if a field has been set.
func (o *ErrInfo) HasErrMsg() bool {
	if o != nil && !IsNil(o.ErrMsg) {
		return true
	}

	return false
}

// SetErrMsg gets a reference to the given string and assigns it to the ErrMsg field.
func (o *ErrInfo) SetErrMsg(v string) {
	o.ErrMsg = &v
}

func (o ErrInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrMsg) {
		toSerialize["errMsg"] = o.ErrMsg
	}
	return toSerialize, nil
}

type NullableErrInfo struct {
	value *ErrInfo
	isSet bool
}

func (v NullableErrInfo) Get() *ErrInfo {
	return v.value
}

func (v *NullableErrInfo) Set(val *ErrInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableErrInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableErrInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrInfo(val *ErrInfo) *NullableErrInfo {
	return &NullableErrInfo{value: val, isSet: true}
}

func (v NullableErrInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


